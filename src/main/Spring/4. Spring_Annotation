1. @SpringBootApplication : 스프링부트 환경 설정
    1) @SpringBootConfiguration : 프로젝트 내 @Configuration을 찾아서 bean(객체) 설정/등록할 수 있도록 설정
    2) @EnableAutoConfiguration : 스프링부트가 필요한 bean(객체)를 자동으로 설정/등록한다. 내장형 Tomcat(웹서버) 설정
    3) @ComponentScan : 현재클래스 기준으로 현재패키지 및 하위패키지 내 컴포넌트(클래스)를 자동으로 스캔하여 등록한다.
        (1) 스캔 대상 : 주로 MVC 어노테이션(@Component @RestController @Controller @Service @Repository @Mapper···)
        (2) 주의할 점 : 현재클래스 기준 상위패키지는 스캔 대상이 아니다.(AppStart는 항상 최상위 패키지에 존재해야한다)
2. @Controller : HTTP(웹) 통신 기능 지원, 웹 통신 요청과 응답 처리
3. @Component : bean(객체)를 자동으로 생성 -> 싱글톤 생략 가능
4. @PostMapping : HTTP 통신의 메소드 중 Post 방식으로 요청 매핑(연결), 주로 CRUD에서 Create 역할
5. @GetMapping : HTTP 통신의 메소드 중 Get 방식으로 요청 매핑(연결), 주로 CRUD에서 Read 역할
6. @PutMapping : HTTP 통신의 메소드 중 Put 방식으로 요청 매핑(연결), 주로 CRUD에서 Update 역할
7. @DeleteMapping : HTTP 통신의 메소드 중 Delete 방식으로 요청 매핑(연결), 주로 CRUD에서 Delete 역할
    -> @XXXMapping("URL정의") : BaseURL(http://localhost:8080) 뒤로 사용할 URL을 정의할 수 있다.
8. @ResponseBody : HTTP 통신의 요청 처리 이후, 응답 반환 시, 자바타입 -> 주로 JSON 타입으로 자동 변환 작업
9. @RequestParam    : 쿼리스트링, 단일 매개변수, int/String/List/Map, Get/Delete
10. @ModelAttribute : 쿼리스트링, 복수 매개변수, DTO/VO, Get/Delete
11. @RequestBody    : HTTP 본문, 복수 객체(JSON), DTO/Map/List, Post/Put
12. @NoArgsConstructor : 컴파일 시, 기본생성자 자동 생성
13. @AllArgsConstructor : 컴파일 시, 전체생성자 자동 생성
14. @Getter : 클래스에 어노테이션하면 컴파일 시, 모든 멤버변수에 대해서 getter 메소드 자동 생성 가능 / 해당하는 멤버변수에만 getter를 제공받을 수도 있다.
15. @Setter : 컴파일 시, 모든 멤버변수에 대해서 setter 메소드 자동 생성 / 생략 시, VO(읽기모드)
16. @ToString : 객체 조회 시, 주소값 대신에 모든 멤버변수를 문자열로 출력하는 메소드 자동 생성
17. @RestController :

[ HTTP 자료전달방법 ]
1. 쿼리스트링  : URL 경로상의 매개변수 표현, Post/Get/Put/Delete 메소드 표현
    -> http://localhost:8080/board?mname=유재석&age=40
2. BODY(본문) : HTTP BODY에 매개변수 표현, Post/Put 메소드 표현
    -> [개발자도구] -> [네트워크] -> [지정 통신명] -> [payload]