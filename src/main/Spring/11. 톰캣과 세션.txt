[ Tomcat ]
1. 정의 : 자바 기반의 웹 프로그램
2. 주로 JSP 와 Servlet 기반
3. Spring boot 환경에 내장된 웹 서버

[ Servlet ]
1. 정의 : 자바 기반의 동적 웹페이지를 만들기 위한 클래스
2. 역할 : HTTP 요청을 받고, HTTP 응답이 가능
3. 사용처 : Spring( @Controller ) ···
    - HttpServletRequest 클래스
    - HttpServletResponse 클래스
4. 환경 : Tomcat 서버 내 Servlet 컨테이너(메모리)가 존재

[ Tomcat의 세션 ]
1. 정의 : Tomcat 서버 내 데이터를 저장하고 관리할 수 있게 메모리를 제공
2. 목적 : 데이터 관리, 인증 및 권한 관리
3. 사용처 :
    1) 로그인 상태
    2) 비회원제 장바구니(vs 회원제 장바구니 -> DB)
    3) 사용자의 설정값
    4) 실시간 처리, 웹게임
4. 특징 : 브라우저(크롬, 엣지 ···)마다 별도의 세션 객체가 할당된다.

[ HttpServletRequest ] : HTTP 요청 정보를 갖는 객체
- 실무적인 부분에서 실제로 로그인하면, 사용자의 IP를 모두 저장한다.
    -> 문제가 생기면, 해당 IP를 추적해야하기 때문에
- 주요 메소드
    1) .getRemoteAddr()         : 사용자의 IP 주소 반환
    2) .getRemotePort()         : 사용자의 Port 번호 반환
    3) .getHeader("User-Agent") : 사용자의 브라우저 정보 반환
    4) .getSession()            : 서버(Tomcat) 내 세션 객체를 반환 -> HttpSession

[ HttpSession ] : 세션 정보를 갖는 객체, Map 컬렉션을 사용 -> key-value로 구성
- 주요 메소드
    1) .setAttribute( "속성명", 속성값 )  : 세션 내 속성 추가
        -> 속성명은 String 타입, 속성값은 Object 타입으로 자동 타입변환되어 저장
    2) .getAttribute( "속성명" )         : 세션 내 속성값 반환
        -> 속성값은 Object 타입으로 반환되기 때문에, 타입변환 필수!!
    3) .getAttributeNames()             : 세션 내 모든 속성명 반환
    4) .invalidate()                    : 세션 내 모든 속성 삭제
    5) .getId()                         : 세션 식별번호 반환, 브라우저마다 할당
    6) .getCreationTime()               : 세션 최초 요청(생성)시간 반환 -> ms
    7) .getLastAccessedTime()           : 세션 마지막 접근시간 반환 -> ms
    8) .getMaxInactiveInterval()        : 세션 최대 유효시간 반환 -> s
    9) .setMaxInactiveInterval( s )     : 세션 최대 유효시간 설정
    10) .removeAttribute( "속성명" )     : 세션 내 특정 속성 삭제